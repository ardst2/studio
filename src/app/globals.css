
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: 'Inter', sans-serif;
}

@layer base {
  :root {
    --background: 0 0% 6%; /* Very Dark Gray/Almost Black */
    --foreground: 0 0% 95%; /* Light Gray for text */

    --card: 0 0% 12%; /* Dark Gray for cards */
    --card-foreground: 0 0% 95%;

    --popover: 0 0% 10%; /* Dark for popovers */
    --popover-foreground: 0 0% 95%;

    /* Primary action color, derived from image's button gradient */
    --primary: 16 100% 50%; /* Vibrant Orange-Red */
    --primary-foreground: 0 0% 10%; /* Dark text for contrast on orange-red */

    --secondary: 0 0% 20%; /* Slightly lighter dark gray for secondary elements */
    --secondary-foreground: 0 0% 95%;

    --muted: 0 0% 15%; /* Muted dark gray */
    --muted-foreground: 0 0% 60%;

    /* Accent color, same as primary for consistency from image */
    --accent: 16 100% 50%; /* Vibrant Orange-Red */
    --accent-foreground: 0 0% 10%; /* Dark text for contrast */

    --destructive: 0 70% 50%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 20%; /* Border for cards, inputs if not gradient */
    --input: 0 0% 10%;  /* Background for input fields */
    --ring: 16 100% 50%; /* Ring color matching new primary/accent */

    --radius: 0.75rem; /* Base radius */
    --radius-md: calc(var(--radius) - 2px);
    --radius-sm: calc(var(--radius) - 4px);


    /* Gradient colors based on the image's button */
    --gradient-pink: 340 100% 60%; /* Pinkish-Red */
    --gradient-red: 0 100% 55%;   /* Red */
    --gradient-orange: 25 100% 55%; /* Orange */
    --gradient-yellow: 45 100% 55%; /* Yellow */
    
    /* Indigo for input glow as per previous PRD, not directly from main image button */
    --gradient-indigo: 271 100% 51%;
    
    /* Avatar gradient from image */
    --gradient-blue: 210 100% 50%;
  }

  .dark {
    --background: 0 0% 6%;
    --foreground: 0 0% 95%;
    --card: 0 0% 12%;
    --card-foreground: 0 0% 95%;
    --popover: 0 0% 10%;
    --popover-foreground: 0 0% 95%;
    --primary: 16 100% 50%;
    --primary-foreground: 0 0% 10%;
    --secondary: 0 0% 20%;
    --secondary-foreground: 0 0% 95%;
    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 60%;
    --accent: 16 100% 50%;
    --accent-foreground: 0 0% 10%;
    --destructive: 0 70% 50%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 20%;
    --input: 0 0% 10%;
    --ring: 16 100% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Custom input field styling with gradient wipe animation */
.input-gradient-glow-wrapper {
  position: relative;
  padding: 1.5px; /* Space for the gradient outline */
  border-radius: var(--radius-sm); /* UPDATED: Less rounded */
  overflow: hidden; /* Important for clip-path */
  transition: box-shadow 300ms ease-out;
}

.input-gradient-glow-wrapper::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit; /* Match wrapper's rounding */
  /* PRD: starting from the bottom right to the top left using indigo, red, orange, and yellow */
  background: linear-gradient(to top left, 
    hsl(var(--gradient-indigo)), 
    hsl(var(--gradient-red)), 
    hsl(var(--gradient-orange)), 
    hsl(var(--gradient-yellow))
  );
  z-index: 0;
  clip-path: circle(0% at 100% 100%); /* Initial state: collapsed at bottom-right */
  transition: clip-path 350ms ease-out;
}

.input-gradient-glow-wrapper:hover::before,
.input-gradient-glow-wrapper:focus-within::before {
  clip-path: circle(150% at 100% 100%); /* Expanded state: reveals from bottom-right */
}

.input-gradient-glow-wrapper > input,
.input-gradient-glow-wrapper > textarea,
.input-gradient-glow-wrapper > div[role="combobox"], /* For Select component */
.input-gradient-glow-wrapper > button[aria-haspopup="dialog"] /* For Calendar PopoverTrigger Button */
 {
  position: relative;
  z-index: 1;
  border-radius: calc(var(--radius-sm) - 1.5px); /* Adjust to fit inside wrapper padding */
  border: 1px solid hsl(var(--border)) !important; /* Use --border for a more distinct outline */
  width: 100%;
  background-color: hsl(var(--input)); /* Ensure input bg matches theme */
  color: hsl(var(--foreground));
  outline: none;
}

/* Specifically target focus state to remove default Tailwind/ShadCN rings */
.input-gradient-glow-wrapper > input:focus,
.input-gradient-glow-wrapper > textarea:focus,
.input-gradient-glow-wrapper > div[role="combobox"]:focus,
.input-gradient-glow-wrapper > button[aria-haspopup="dialog"]:focus,
.input-gradient-glow-wrapper > input:focus-visible,
.input-gradient-glow-wrapper > textarea:focus-visible,
.input-gradient-glow-wrapper > div[role="combobox"]:focus-visible,
.input-gradient-glow-wrapper > button[aria-haspopup="dialog"]:focus-visible {
  outline: none !important;
  box-shadow: none !important;
}


/* Optional: keep a subtle box-shadow for additional depth if desired */
.input-gradient-glow-wrapper:hover,
.input-gradient-glow-wrapper:focus-within {
  box-shadow: 0 0 8px 0px hsla(var(--gradient-orange), 0.5);
}


/* Gradient Spinner Loader - using image-inspired gradient colors */
.gradient-spinner {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: inline-block;
  position: relative;
  background: conic-gradient(from 0deg at 50% 50%, 
    hsl(var(--gradient-pink)) 0%, 
    hsl(var(--gradient-red)) 33%, 
    hsl(var(--gradient-orange)) 66%, 
    transparent 100%
  );
  animation: spin 1s linear infinite;
  box-sizing: border-box;
}
.gradient-spinner::after {
  content: '';
  box-sizing: border-box;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: hsl(var(--card)); /* Default to card, can be overridden by Loader component */
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Big gradient button - using image-inspired gradient colors */
.btn-gradient {
  @apply text-primary-foreground; 
  background-image: linear-gradient(to right, 
    hsl(var(--gradient-pink)), 
    hsl(var(--gradient-red)), 
    hsl(var(--gradient-orange)), 
    hsl(var(--gradient-yellow))
  );
  background-size: 200% auto;
  transition: background-position 0.5s ease;
}
.btn-gradient:hover {
  background-position: right center;
}

/* Ensure primary HSL values are set for ShadCN components (used as solid fallback) */
:root {
  /* ... other root variables ... */
  --primary: 16 100% 50%; 
  --primary-foreground: 0 0% 10%;
}

.dark {
   /* ... other dark variables ... */
  --primary: 16 100% 50%; 
  --primary-foreground: 0 0% 10%;
}
